var copyVar;function copyThis(){copyVar=JSON.stringify([dpsx,dpsy])}function pasteThis(){var[e,t]=JSON.parse(copyVar);e.every((e,t)=>e===data[th_in][col.y][t])?(saveOldData(),data[th_in][col.y]=e,data[th_in][col.z]=t,endJobs()):alert("Copy paste between different data set is not supported!")}function swapData(){if(index.length&&swapperIsOn){saveOldData();for(let e of index)[data[th_in][col.z][e],data[th_in][col.s][e]]=[data[th_in][col.s][e],data[th_in][col.z][e]];endJobs()}}function moveReflect(e,t){saveOldData();var a=index[index.length-1]+1,n=dpsy.slice(index[0],a);e||(a=index[0]-index.length),t&&n.reverse(),n.shift(),dpsy.splice(a,n.length,...n),updatePlot(),updateOnServer()}var mirror=0;function repeatMirror(){if(last=parseFloat($("#einp").val()),times=parseFloat($("#etime").val()),!last|!times)showStatus("Invalid inputs.");else{mirror=$("#repSel")[0].selectedIndex;var e=[],t=data[0].length;for(let a=0;a<t;a++)a!=col.y&&e.push(a);for(let e=0;e<data.length;e++)if(!(data[e][col.y].indexOf(last)+1))return alert("Endpoint must exist !!!"),void $("#extend").slideUp();data=data.map(t=>{var a=t[col.y].indexOf(last)+1,n=t[col.y].slice(0,a);(i=n.slice()).splice(0,1);for(let e=0;e<times-1;e++)for(let t=0;t<i.length;t++)n.push(i[t]+last*(1+e));for(let n of e){var l=t[n].slice(0,a),i=l.slice();for(let e=0;e<times-1;e++)ptmp=mirror?i.reverse().slice():i.slice(),ptmp.splice(0,1),l.push(...ptmp);t[n]=l}return t[col.y]=n,t}),endJobs({resize:!0,startdrag:!0});t=mirror?"mirrored":"repeated";showStatus(`Data ${t} ${times} times...`),$("#einp").attr("value",last),$("#etime").attr("value",times),extendUtils.extend=$("#extendutils").html()}}function dataFiller(){if(saveOldData(),start=parseFloat($("#fstart").val()),stop=parseFloat($("#fend").val()),step=parseFloat($("#fstep").val()),isNaN(start)|isNaN(step)|!step)showStatus("Invalid inputs.");else{var e=!!$("#expSel")[0].selectedIndex,t=[];if(ddd)for(let e=0;e<data[0].length;e++)e!=col.y&e!=col.x&&t.push(e);else for(let e=0;e<data[0].length;e++)e!=col.y&&t.push(e);for(let e of data[0][col.y])if(e[0]>=e[1])return void alert("Monotonically increasing values required for interpolation.\n NOTE: You can use the spreadsheet to sort the data");var a=document.getElementById("setAsGrid").checked,n=[],l=Plotly.d3.range(start,stop+step,step);if(a)n=l;else{for(let e of data[0][col.y]){if(e>=start)break;n.push(e)}n=n.concat(l);for(let e of data[0][col.y])e<=stop||n.push(e)}data=data.map(a=>{if(n.length==a[0].length)return a;var l=a[col.y].slice(),i=a[col.y].length-1;let o=!1,r=!1;e&&(r=n[0]<l[0],o=n[n.length-1]>l[l.length-1]);for(let e of t){newArr=[];var s=a[e].slice();spl=new Spline(l,s),r&&(frontReg=new Regression(l.slice(0,3),s.slice(0,3),2)),o&&(backReg=new Regression(l.slice(Math.max(l.length-3,1)),s.slice(Math.max(s.length-3,1)),2));for(let t of n)ind=a[col.y].indexOf(t),-1!=ind?newArr.push(a[e][ind]):t<=a[col.y][0]?r?newArr.push(frontReg.val(t)):newArr.push(a[e][0]):t>=a[col.y][i]?o?newArr.push(backReg.val(t)):newArr.push(a[e][i]):newArr.push(spl.getVal(t));a[e]=newArr}return a[col.y]=n,ddd&&(a[col.x]=new Array(n.length).fill(a[col.x][0])),a}),endJobs({resize:!0,startdrag:!0}),showStatus("Missing values are filled..."),$("#fstart").attr("value",start),$("#fend").attr("value",stop),$("#fstep").attr("value",step),extendUtils.filler=$("#extendutils").html()}}function filterData(){var e=$("#flSel")[0].selectedIndex,t=parseFloat($("#flc").val()),a=parseFloat($("#flf").val()),n=$("#flcl").val().split(",").map(e=>parseFloat(e)-1);0==e?data=data.map(e=>{for(let l of n)e[l]=e[l].map(e=>e<t?a:e);return e}):1==e?data=data.map(e=>{for(let l of n)e[l]=e[l].map(e=>e>t?a:e);return e}):2==e&&(data=data.map(e=>{for(let l of n)e[l]=e[l].map(e=>e==t?a:e);return e})),endJobs({resize:!0,startdrag:!0}),showStatus("Data filtered...")}function deleteExtrapolate(){if(index.length){first=index[0],last=index[index.length-1],xs=dpsx.slice(Math.max(first-3,0),first).concat(dpsx.slice(last+1,last+4)),ys=dpsy.slice(Math.max(first-3,0),first).concat(dpsy.slice(last+1,last+4)),exterp=new Regression(xs,ys,2),saveOldData();for(let e of index)data[th_in][col.z][e]=exterp.val(data[th_in][col.y][e]);endJobs()}}function dataSupEnd(){if(!index.length)return;if(first=index[0],0==first)return;let e=dpsx.slice(Math.max(first-3,0),first),t=dpsy.slice(Math.max(first-3,0),first);exterp=new Regression(e,t,2),saveOldData();let a=exterp.val(data[th_in][col.y][first])-data[th_in][col.z][first];for(let e of index)data[th_in][col.z][e]+=a;endJobs()}function dataSupStart(){if(!index.length)return;if(last=index[index.length-1],last==dpsx.length-1)return;let e=dpsx.slice(last+1,last+4),t=dpsy.slice(last+1,last+4);exterp=new Regression(e,t,2),saveOldData();let a=exterp.val(data[th_in][col.y][last])-data[th_in][col.z][last];for(let e of index)data[th_in][col.z][e]+=a;endJobs()}function deleteInterpolate(){if(index.length){var e=dpsx.slice(),t=dpsy.slice();0==index[0]&&index.splice(0,1),index[index.length-1]==dpsx.length-1&&index.splice(-1,1);for(var a=index.length-1;a>=0;a--)e.splice(index[a],1),t.splice(index[a],1);spl=new Spline(e,t),saveOldData();for(let e of index)data[th_in][col.z][e]=spl.getVal(data[th_in][col.y][e]);endJobs()}}function autoSmooth(){if(ma&&(saveOldData(),ma=0),index.length){0==index[0]&&index.splice(0,1),index[index.length-1]==dpsx.length-1&&index.splice(-1,1);for(let e of index)dpsy[e]=(dpsy[e-1]+dpsy[e]+dpsy[e+1])/3;data[th_in][col.z]=dpsy,updatePlot(),saved=!1}}function changeSign(){if(index.length){saveOldData();for(let e of index)data[th_in][col.z][e]*=-1;endJobs()}}function setValue(){saveOldData();var e=parseFloat($("#valinput").val());if(!isNaN(e)){for(let t of index)data[th_in][col.z][t]=e;endJobs({clearIndex:!0}),Plotly.restyle(figurecontainer,{selectedpoints:[null]}),$("#setval").remove()}}function removeBadData(){if(index.length){saveOldData();for(let e=index.length-1;e>=0;e--)for(let t=0;t<data[0].length;t++)data[th_in][t].splice(index[e],1);endJobs({clearIndex:!0}),Plotly.restyle(figurecontainer,{selectedpoints:[null]})}}function revertPloyFit(){Plotly.deleteTraces(figurecontainer,1),polyFitLive=!1;for(let e of["edat","fill","filter","af","arf"])menu.getMenuItemById(e).enabled=!0}function initPolyfit(){if(!polyFitLive){if(ddd)return void alert("Regression fitting is only supported for 2D data.");if(figurecontainer.data.length>1)return void alert("Supported only for one plot at time.")}for(let e of["edat","fill","filter","af","arf"])menu.getMenuItemById(e).enabled=!1;return!0}var polyFitLive=!1;function polyfit(e){if(e){if(!(e>=dpsx.length)){var t=dpsx.slice(),a=dpsy.slice(),n=[],l=new Regression(t,a,e,!0);for(let e of dpsx)n.push(l.val(e));if(polyFitLive)Plotly.restyle(figurecontainer,{x:[dpsx],y:[n]},1);else{polyFitLive=!0;let e=JSON.parse(JSON.stringify(iniPointsD));e.mode="lines",e.line.color="#207104",e.line.shape="spline",e.name="Fitted line",e.x=dpsx,e.y=n,Plotly.addTraces(figurecontainer,e)}var i="y = "+l.cf[0].toPrecision(5);for(let t=1;t<=e;t++){let e=l.cf[t].toPrecision(5);i+=` ${e>=0?"+":"-"}${Math.abs(e)}x<sup>${t>1?t:""}</sup>`}return document.getElementById("formulaStr").innerHTML=i,!0}showStatus(`Fitting of order ${e} is not possible.`)}}function initialSetup(){var funcStr=$("#funcStr").val(),paramList=$("#paramList").val().split(","),iterationVal=parseInt($("#iterationVal").val()),intVal=$("#intVal").val().split(",").map(e=>parseFloat(e)),maxVal=$("#maxVal").val().split(",").map(e=>parseFloat(e)),minVal=$("#minVal").val().split(",").map(e=>parseFloat(e)),dampVal=parseFloat($("#dampVal").val()),stepVal=parseFloat($("#stepVal").val()),etVal=parseFloat($("#etVal").val()),egVal=parseFloat($("#egVal").val());if(!funcStr)throw"Funtion is required.";if(!paramList)throw"Prameters list is required";if(!iterationVal)throw"Maximum iteraion number is required";var parLen=paramList.length;if(isNaN(intVal[0]))intVal=new Array(parLen).fill(0);else if(intVal.length!=parLen)throw"Wrong number of initial values";if(isNaN(minVal[0]))minVal=new Array(parLen).fill(Number.MIN_SAFE_INTEGER);else if(!minVal.length!=parLen)throw"Wrong number of minimum values";if(isNaN(maxVal[0]))maxVal=new Array(parLen).fill(Number.MAX_SAFE_INTEGER);else if(!maxVal.length!=parLen)throw"Wrong number of maximum values";if(dampVal){if(dampVal<0)throw"Damping factor must be positive"}else dampVal=1.5;stepVal||(stepVal=.01),etVal||(etVal=1e-5),egVal||(egVal=1e-8);try{funcList=["sin","asin","sinh","cos","acos","cosh","tan","tanh","atan","exp","sqrt","log"];for(let e of funcList)funcStr=funcStr.split(e).join("Math."+e);func=eval(`(function([${paramList}]){return (x)=> ${funcStr}})`)}catch(e){throw"Can't parse the formula."}return $("#funcStr").attr("value",$("#funcStr").val()),$("#paramList").attr("value",$("#paramList").val()),$("#iterationVal").attr("value",$("#iterationVal").val()),$("#intVal").attr("value",$("#intVal").val()),$("#maxVal").attr("value",$("#maxVal").val()),$("#minVal").attr("value",$("#minVal").val()),$("#dampVal").attr("value",$("#dampVal").val()),$("#stepVal").attr("value",$("#stepVal").val()),$("#etVal").attr("value",$("#etVal").val()),$("#egVal").attr("value",$("#egVal").val()),extendUtils.lmfit=$("#extendutils").html(),[func,iterationVal,intVal,maxVal,minVal,dampVal,stepVal,etVal,egVal]}function initLMfit(){if(ddd)return void alert("Data fitting is only supported for 2D data.");if(figurecontainer.data.length>1)return void alert("Supported only for one plot at a time.");let e=JSON.parse(JSON.stringify(iniPointsD));e.mode="lines",e.line.color="#207104",e.line.shape="spline",e.name="Fitted line",e.x=[dpsx[0]],e.y=[dpsy[0]],Plotly.addTraces(figurecontainer,e);for(let e of["edat","fill","filter","af","arf"])menu.getMenuItemById(e).enabled=!1;return!0}function closeLMfit(){Plotly.deleteTraces(figurecontainer,1),Plotly.relayout(figurecontainer,{annotations:[{text:"",showarrow:!1}]});for(let e of["edat","fill","filter","af","arf"])menu.getMenuItemById(e).enabled=!0;resizePlot()}function lmfit(){setTimeout(()=>{try{var[e,t,a,n,l,i,o,r,s]=initialSetup()}catch(e){return void alert(e)}var d=Number.MIN_SAFE_INTEGER,p=!1;xs=dpsx.slice(),ys=dpsy.slice();try{e(a)(xs[0])}catch(c){return alert("Something wrong, can't use the formula"),void console.log(c)}for(let m=0;m<t&&!p;m++){a=stepAhed(xs,ys,a,i,o,e);for(let e=0;e<a.length;e++)a[e]=Math.min(Math.max(l[e],a[e]),n[e]);var c=0,f=[],u=0;const t=e(a);for(var h=0;h<xs.length;h++)tmp=t(xs[h]),c+=Math.abs(ys[h]-tmp);p=Math.abs(c-d)<=s||c<=r,d=c}var m=e(a);for(h=0;h<xs.length;h++)tmp=m(xs[h]),f.push(tmp),yy=ys[h],yy>Number.EPSILON&&(u+=(yy-tmp)**2/tmp);Plotly.restyle(figurecontainer,{x:[dpsx],y:[f]},1),anotText=`y = ${$("#funcStr").val()}<br>\n                ${$("#paramList").val().split(",").join(", ")} = ${a.map(e=>e.toPrecision(5)).join(", ")}\n                <br>&#967;<sup>2</sup> Error = ${u.toPrecision(5)}`,Plotly.relayout(figurecontainer,{annotations:[{xref:"paper",x:.5,yref:"paper",y:1,showarrow:!1,text:anotText,bordercolor:"#000000"}]}),showStatus("Data fitting done")},1)}function endJobs({resize:e=!1,updateAll:t=!1,startdrag:a=!1,clearIndex:n=!1}={}){return new Promise((l,i)=>{updatePlot(t),updateOnServer(),saved=!1,fullData[0]=data,n&&(index=[]),a&&startDragBehavior(),e&&resizePlot(),l()})}function downloadImage(){var e=$("#dfileName").val(),t=$("#imRes").val().split("x"),a=$("#fileFormat").val().toLocaleLowerCase();e||(e="plot"),"pdf"==a?(e+=".pdf",exportPDF({width:parseFloat(t[0]),height:parseFloat(t[1])}).then(t=>{var a=dialog.showSaveDialogSync({title:"Save As:",defaultPath:path.join(recentLocation,e),filters:[{name:"PDF",extensions:["pdf"]}]});void 0!==a&&fs.writeFileSync(a,t)})):Plotly.downloadImage(figurecontainer,{filename:e,format:a,width:t[0],height:t[1]})}function exportPDF({width:e=1920,height:t=1080}={}){return new Promise((a,n)=>{var l={marginsType:1,printBackground:!0,pageSize:{width:(e+6)/.00377957517575025,height:(t+6)/.00377957517575025}},i=window.encodeURIComponent("<!DOCTYPE html>\n        <html>\n        <head>\n        <meta charset=\"UTF-8\">\n        <style>\n        body {\n            margin: 0;\n            padding: 0;\n            background-color: 'rgba(0,0,0,0)'\n        }\n        </style>\n        </head>\n        <body><img/></body>\n        </html>");Plotly.toImage(figurecontainer,{format:"svg",width:e,height:t}).then(o=>{var r=new remote.BrowserWindow({width:e,height:t,show:!1});r.on("closed",()=>{r=null}),r.loadURL(`data:text/html,${i}`),r.webContents.executeJavaScript(`new Promise((resolve, reject) => {\n                const img = document.body.firstChild\n                img.onload = resolve\n                img.onerror = reject\n                img.src = "${o}"\n                setTimeout(() => reject(new Error('too long to load image')), 3000)\n            })`).then(()=>{r.webContents.printToPDF(l).then(e=>a(e)).catch(e=>n(e))}).catch(e=>{n(e),console.log(e),r.close()})})})}function expRotate(e,t,a){if(e=e.map(e=>transpose(e)),!issame){issame=!0;var n=e[0].length;for(let t of e)if(t.length!=n){issame=!1;break}}if(issame)return e=(e=transpose(e)).map(e=>transpose(e));e=[].concat(...e).filter(e=>void 0!==e);var l=new Set;for(let a of e)l.add(a[t]);l=[...l].sort((e,t)=>e-t);var i=[];for(let n of l){var o=[];for(let a of e)n==a[t]&&o.push(a);o=o.sort((e,t)=>e[a]-t[a]),i.push(transpose(o))}return i}function hypotenuse(e,t){var a=0;return Math.abs(e)>Math.abs(t)?(a=t/e,Math.abs(e)*Math.sqrt(1+a*a)):0!==t?(a=e/t,Math.abs(t)*Math.sqrt(1+a*a)):0}function solve(e,t){var a,n,l,i,o=JSON.parse(JSON.stringify(e)),r=JSON.parse(JSON.stringify(t)),s=o.length,d=o[0].length,p=new Array(d);for(l=0;l<d;l++){var c=0;for(a=l;a<s;a++)c=hypotenuse(c,o[a][l]);if(0!==c){for(o[l][l]<0&&(c=-c),a=l;a<s;a++)o[a][l]/=c;for(o[l][l]+=1,n=l+1;n<d;n++){for(i=0,a=l;a<s;a++)i+=o[a][l]*o[a][n];for(i=-i/o[l][l],a=l;a<s;a++)o[a][n]+=i*o[a][l]}}p[l]=-c}for(l=0;l<d;l++){for(i=0,a=l;a<s;a++)i+=o[a][l]*r[a];for(i=-i/o[l][l],a=l;a<s;a++)r[a]+=i*o[a][l]}for(l=d-1;l>=0;l--)for(r[l]/=p[l],a=0;a<l;a++)r[a]-=r[l]*o[a][l];return r.slice(0,d)}class Regression{constructor(e,t,a){var n=e.slice(0),l=t.slice(0);this.n=a;var i=[];for(let e of n){let t=new Array(a+1);for(let n=0;n<=a;n++)t[n]=e**n;i.push(t)}this.cf=solve(i,l)}determinant(e,t,a,n,l,i,o,r,s){return e*(l*s-i*r)-t*(n*s-o*i)+a*(n*r-l*o)}val(e){var t=0;for(let a=0;a<=this.n;a++)t+=this.cf[a]*e**a;return t}}class Spline{constructor(e,t){var a=e.length,n=new Array(a).fill(0),l=new Array(a).fill(0);let i,o;for(let r=1;r<a-1;r++)o=(i=(e[r]-e[r-1])/(e[r+1]-e[r-1]))*n[r-1]+2,n[r]=(i-1)/o,l[r]=(6*((t[r+1]-t[r])/(e[r+1]-e[r])-(t[r]-t[r-1])/(e[r]-e[r-1]))/(e[r+1]-e[r-1])-i*l[r-1])/o;for(let e=a-2;e>-1;e-=1)n[e]=n[e]*n[e+1]+l[e];this.xs=e,this.ys=t,this.diff=n}getVal(e){let t,a,n,l=0;for(;e>this.xs[l];)l++;return l--,t=this.xs[l+1]-this.xs[l],a=(this.xs[l+1]-e)/t,n=(e-this.xs[l])/t,a*this.ys[l]+n*this.ys[l+1]+((a**3-a)*this.diff[l]+(n**3-n)*this.diff[l+1])*t**2/6}}function inverse(e){var t,a,n,l,i=JSON.parse(JSON.stringify(e)),o=i.length,r=i[0].length,s=new Array(r),d=new Array(o).fill(0).map(e=>new Array(o).fill(0));for(let e=0;e<o;e++)d[e][e]=1;for(n=0;n<r;n++){var p=0;for(t=n;t<o;t++)p=hypotenuse(p,i[t][n]);if(0!==p){for(i[n][n]<0&&(p=-p),t=n;t<o;t++)i[t][n]/=p;for(i[n][n]+=1,a=n+1;a<r;a++){for(l=0,t=n;t<o;t++)l+=i[t][n]*i[t][a];for(l=-l/i[n][n],t=n;t<o;t++)i[t][a]+=l*i[t][n]}}s[n]=-p}let c=d[0].length;for(n=0;n<r;n++)for(a=0;a<c;a++){for(l=0,t=n;t<o;t++)l+=i[t][n]*d[t][a];for(l=-l/i[n][n],t=n;t<o;t++)d[t][a]+=l*i[t][n]}for(n=r-1;n>=0;n--){for(a=0;a<c;a++)d[n][a]/=s[n];for(t=0;t<n;t++)for(a=0;a<c;a++)d[t][a]-=d[n][a]*i[t][n]}return d}function eyemat(e,t){var a=new Array(e).fill(0).map(t=>new Array(e).fill(0));for(let n=0;n<e;n++)a[n][n]=t;return a}function matmul(e,t){if(e[0].length==t.length){var a=e.length,n=t[0].length,l=t.length;res=new Array(a).fill(0).map(e=>new Array(n).fill(0));for(let i=0;i<l;i++)for(let l=0;l<a;l++)for(let a=0;a<n;a++)res[l][a]+=e[l][i]*t[i][a];return res}}function matadd(e,t){var a=e.length,n=e[0].length,l=new Array(a).fill(0).map(e=>new Array(n).fill(0));for(let i=0;i<a;i++)for(let a=0;a<n;a++)l[i][a]=e[i][a]+t[i][a];return l}function matmulscalar(e,t){var a=e.length,n=e[0].length,l=new Array(a).fill(0).map(e=>new Array(n).fill(0));for(let i=0;i<a;i++)for(let a=0;a<n;a++)l[i][a]=e[i][a]*t;return l}function errorCalculation(e,t,a){var n=0;const l=a(t);for(var i=0;i<e.x.length;i++)n+=Math.abs(e.y[i]-l(e.x[i]));return n}function gradientFunction(e,t,a,n,l){const i=a.length,o=e.length;for(var r=new Array(i),s=0;s<i;s++){r[s]=new Array(o);var d=a.concat();d[s]+=n;for(var p=l(d),c=0;c<o;c++)r[s][c]=t[c]-p(e[c])}return r}function matrixFunction(e,t){const a=e.length;for(var n=new Array(a),l=0;l<a;l++)n[l]=[e[l]-t[l]];return n}function stepAhed(e,t,a,n,l,i){var o=n*l*l,r=eyemat(a.length,o),s=e.map(e=>i(a)(e)),d=gradientFunction(e,s,a,l,i),p=matrixFunction(t,s),c=inverse(matadd(r,matmul(d,transpose(d)))),f=transpose(matmulscalar(matmul(matmul(c,d),p),l))[0],u=a.length,h=new Array(u);for(let e=0;e<u;e++)h[e]=a[e]-f[e];return h}var minWidth=window.innerWidth/4.5;function openNav(){closeNav2(),$("#split-bar").width(5),$("#sidebar").width(minWidth),$("#full").css("margin-left",minWidth+6),resizePlot()}function closeNav(){$("#sidebar").width()&&($("#split-bar,#sidebar").width(0),$("#full").css("margin-left",0),resizePlot())}function openNav2(){closeNav(),$("#split-bar2").width(5),$("#sidebar2").width(minWidth),$("#jsoneditor").width(minWidth-5),$("#full").css("margin-left",minWidth+6),resizePlot()}function closeNav2(){$("#sidebar2").width()&&($("#split-bar2,#sidebar2").width(0),$("#full").css("margin-left",0),$("#jsoneditor").width(195),resizePlot())}function updateJSON(){if($("#sidebar2").width()){var e=[],t=[];for(let a of figurecontainer.data)e.push({Title:a.name,Style:a.mode,Marker:a.marker,Line:a.line}),t.push(a.name);legendNames=t,Layout=figurecontainer.layout,editor.update({Plots:e,Layout:Layout})}}$("#split-bar").mousedown(function(e){e.preventDefault(),$(document).mousemove(function(e){e.preventDefault();var t=e.pageX-$("#sidebar").offset().left;t>window.innerWidth/5.5&&t<window.innerWidth/2.5&&($("#sidebar").width(t-2),$("#full").css("margin-left",t),minWidth=t,resizePlot())})}),$("#split-bar2").mousedown(function(e){e.preventDefault(),$(document).mousemove(function(e){e.preventDefault();var t=e.pageX-$("#sidebar2").offset().left;t>window.innerWidth/5.5&&t<window.innerWidth/2.5&&($("#sidebar2").width(t-2),$("#full").css("margin-left",t),$("#jsoneditor").width(t-7),minWidth=t,resizePlot())})}),$(document).mouseup(function(e){$(document).unbind("mousemove")});var typeList=["Arial","Balto","Courier New","Droid Sans",,"Droid Serif","Droid Sans Mono","Gravitas One","Old Standard TT","Open Sans","Overpass","PT Sans Narrow","Raleway","Times New Roman"],symList=["circle","circle-open","circle-dot","circle-open-dot","square","square-open","square-dot","square-open-dot","diamond","diamond-open","diamond-dot","diamond-open-dot","cross","cross-open","cross-dot","cross-open-dot","x","x-open","x-dot","x-open-dot","triangle-up","triangle-up-open","triangle-up-dot","triangle-up-open-dot","triangle-down","triangle-down-open","triangle-down-dot","triangle-down-open-dot","triangle-left","triangle-left-open","triangle-left-dot","triangle-left-open-dot","triangle-right","triangle-right-open","triangle-right-dot","triangle-right-open-dot","triangle-ne","triangle-ne-open","triangle-ne-dot","triangle-ne-open-dot","triangle-se","triangle-se-open","triangle-se-dot","triangle-se-open-dot","triangle-sw","triangle-sw-open","triangle-sw-dot","triangle-sw-open-dot","triangle-nw","triangle-nw-open","triangle-nw-dot","triangle-nw-open-dot","pentagon","pentagon-open","pentagon-dot","pentagon-open-dot","hexagon","hexagon-open","hexagon-dot","hexagon-open-dot","hexagon2","hexagon2-open","hexagon2-dot","hexagon2-open-dot","octagon","octagon-open","octagon-dot","octagon-open-dot","star","star-open","star-dot","star-open-dot","hexagram","hexagram-open","hexagram-dot","hexagram-open-dot","star-triangle-up","star-triangle-up-open","star-triangle-up-dot","star-triangle-up-open-dot","star-triangle-down","star-triangle-down-open","star-triangle-down-dot","star-triangle-down-open-dot","star-square","star-square-open","star-square-dot","star-square-open-dot","star-diamond","star-diamond-open","star-diamond-dot","star-diamond-open-dot","diamond-tall","diamond-tall-open","diamond-tall-dot","diamond-tall-open-dot","diamond-wide","diamond-wide-open","diamond-wide-dot","diamond-wide-open-dot","hourglass","hourglass-open","bowtie","bowtie-open","circle-cross","circle-cross-open","circle-x","circle-x-open","square-cross","square-cross-open","square-x","square-x-open","diamond-cross","diamond-cross-open","diamond-x","diamond-x-open","cross-thin","cross-thin-open","x-thin","x-thin-open","asterisk","asterisk-open","hash","hash-open","hash-dot","hash-open-dot","y-up","y-up-open","y-down","y-down-open","y-left","y-left-open","y-right","y-right-open","line-ew","line-ew-open","line-ns","line-ns-open","line-ne","line-ne-open","line-nw","line-nw-open"],schema={properties:{Plots:{items:{properties:{Title:{type:["string","number"]},Style:{enum:["markers+lines","lines","markers"]},Marker:{properties:{symbol:{enum:symList},size:{type:"number"},opacity:{type:"number"}}},Line:{properties:{width:{type:"integer"},dash:{type:"integer"},shape:{enum:["linear","spline"]}}}}}},Layout:{properties:{selectdirection:{enum:["v","h","any"]},dragmode:{enum:["select","zoom"]},hovermode:{enum:["false","x","y","closest"]},title:{properties:{font:{properties:{family:{enum:typeList},size:{type:"number"}}}}},xaxis:{properties:{type:{enum:["linear","log","date","category"]},title:{properties:{font:{properties:{family:{enum:typeList},size:{type:"number"}}}}}},required:["type"]},yaxis:{properties:{type:{enum:["linear","log","date","category"]},title:{properties:{font:{properties:{family:{enum:typeList},size:{type:"number"}}}}}},required:["type"]}}}}},options={onChangeJSON:function(e){var t=[],a=[],n=[],l=[];for(let i of e.Plots)t.push(i.Title),a.push(i.Style),n.push(i.Line),l.push(i.Marker);legendNames=t,Plotly.update(figurecontainer,{name:t,mode:a,line:n,marker:l},e.Layout),makeRows()},onColorPicker:function(e,t,a){new JSONEditor.VanillaPicker({parent:e,color:t,popup:"bottom",onChange:function(e){var t=1===e.rgba[3]?e.hex.substr(0,7):e.hex;a(t)}}).show()},mode:"form",schema:schema};const JSONEditor=require("../lib/jsoneditor.min.js");var jsoneditor=document.getElementById("jsoneditor"),editor=new JSONEditor(jsoneditor,options,{lines:"",layout:""});function getInd(e){selectEditable($("li").index(e))}function removeRow(e){if(1!=fullData.length){var t=$(".closefile").index(e);if(console.log(t),fullData.splice(t,1),fullDataCols.splice(t,1),fileNames.splice(t,1),saveNames.splice(t,1),legendNames.splice(t,1),col=fullDataCols[0],Plotly.deleteTraces(figurecontainer,t),makeRows(),makeEditable(),ddd?(xCol.selectedIndex=col.x,yCol.selectedIndex=col.y,zCol.selectedIndex=col.z):(xCol.selectedIndex=col.y,yCol.selectedIndex=col.z),0==t){marker=[{symbol:200,color:"#b00",size:6,opacity:1}],line=[{width:2,color:"#1e77b4",dash:0,shape:"linear"}];for(let e=1;e<figurecontainer.data.length;e++)marker.push({symbol:200,color:colorList[e%9],size:6,opacity:1}),line.push({width:2,color:colorList[e%9],dash:0,shape:"linear"});Plotly.restyle(figurecontainer,{line:line,marker:marker})}}}function copyFile(e){var t=$(".copyfile").index(e);data=fullData[t],fullData.unshift(fullData[t]),fullDataCols.unshift(JSON.parse(JSON.stringify(fullDataCols[t]))),fileNames.unshift(fileNames[t]),saveNames.unshift(saveNames[t]),legendNames.unshift(legendNames[t]),addTrace()}function makeRows(){tmp="<ol>";for(let e=0;e<fileNames.length;e++)name=fileNames[e],ccll=fullDataCols[e],name=path.basename(name),tmp+=`<li onclick='getInd(this)'>\n        <input type="button" title="Close this File" class = 'closefile' value="X">\n        <input type="button" title="Copy this File" class = 'copyfile' value="C">\n        <label class='filename' >${name} ${ccll.y+1}:${ccll.z+1}</label>\n        </li>`;tmp+="</ol>",$("#files").html(tmp),$("li .closefile").click(function(e){removeRow(this),e.stopPropagation()}),$("li .copyfile").click(function(e){copyFile(this),e.stopPropagation()}),updateJSON()}$("#jsoneditor").height(window.innerHeight-jsoneditor.offsetTop);var extendUtils={filter:' Condition:<select id="flSel">\n    <option>&lt;</option>\n    <option>></option>\n    <option>=</option>\n</select>\n<input type="text" id="flc"> <br>\nFill with &nbsp;: <input type="text" id="flf">\n<input type="submit" value="OK" onclick="filterData();closeThis(this)" style="width: 5pc;height: 1.9pc">\n<input type="submit" value="Cancel" onclick="closeThis(this)" style="width: 5pc;height: 1.9pc">\n&ensp; &#9432;<span style="font-size:.9pc"> This operation is not reversible. You may want to save before proceeding.</span> <br>\nColumns : <input type="text" id="flcl">',filler:'            Start : <input type="text" id="fstart">\nExtrapolate: <select  id="expSel">\n    <option>Closest</option>\n    <option>Regression</option>\n</select> <br>\nEnd &nbsp;: <input type="text" id="fend">\n<input type="submit" value="OK" onclick="dataFiller();closeThis(this)" style="width: 5pc;height: 1.7pc;margin-right: 2px">\n<input type="submit" value="Cancel" onclick="closeThis(this)" style="width: 5pc;height: 1.7pc">\n&ensp; &#9432;<span style="font-size:.9pc"> This operation is not reversible. You may want to save before proceeding.</span><br>\nStep : <input type="text" id="fstep">\n<input id=\'setAsGrid\' type="checkbox"> Set as grid',extend:'Extend from : 0 to <input type="text" id="einp"> <br>\nExtend times: <input type="text" id="etime">\n<input type="submit" value="OK" onclick="repeatMirror();closeThis(this)" style="width: 5pc;height: 1.9pc">\n<input type="submit" value="Cancel" onclick="closeThis(this)" style="width: 5pc;height: 1.9pc"> <br>\nExtend by: <select style="margin-left: 18px;" id="repSel" >\n    <option>Repeat</option>\n    <option>Mirror</option>\n</select><br>',rgfit:'<span style="display: inline-block; margin-bottom: .4pc"> \nOrder of polynomial: &ensp;</span> \n<input style="height: 1.4pc" id="polyInp" type="number" value="1" min="1" oninput="polyfit(this.value)"> &ensp; \n<input type="submit" value="Close" onclick="closeThis(this);revertPloyFit()" style="width: 5pc;height: 1.5pc"> <br>\nFitted Equation: <span id=\'formulaStr\'></span>',lmfit:'<div style="margin-bottom: 7px;">\n<span> Function: <input id=\'funcStr\' style=" margin-left:1.7%;width: 40.3%; height: 1.5pc;" type="text" value="a+b*x"></span>\n<span style="margin-left: 3%;"> Parameters List: <input style=" height: 1.5pc; width: 10%;" id=\'paramList\'type="text" value="a,b"></span>\n<button style=" height: 1.7pc; float: right;margin-right: 2.1%;"onclick="closeThis();closeLMfit()" >Close</button>\n<button style=" height: 1.7pc;margin-right: 3pc; width: 10%;border: 2px solid #000000; float: right;" onclick="lmfit()">Solve</button>\n</div>\n<div class="grid-container">\n   Max Iterations: <input id=\'iterationVal\' type="text" value=\'1000\'>\n   <span>Initial Values: </span> <input id=\'intVal\' type="text">\n   <span>Max Values:</span> <input id=\'maxVal\' type="text">\n   <span>Min Values: </span><input id=\'minVal\' type="text">\n   Damping factor: <input id=\'dampVal\' type="text" value="1.5">\n  <span>Step Size:</span> <input id=\'stepVal\' type="text" value=\'1e-2\'>\n  <span>Error Tolerance: </span><input id=\'etVal\' type="text" value=\'1e-5\'>\n  <span>Error gradient:</span> <input id=\'egVal\' type="text" value=\'1e-8\'>  \n</div>'};function closeThis(e){$("#extendutils").slideUp(),resizePlot()}function hotDKeys(e){if("text"!=document.activeElement.type)switch(e.key){case"m":case"ArrowDown":case"ArrowUp":ma=1,fullData[0]=data,updateOnServer()}}function hotKeys(e){if("text"!=document.activeElement.type)switch(e.key){case" ":Plotly.relayout(figurecontainer,{"xaxis.autorange":!0,"yaxis.autorange":!0});break;case",":if(0==th_in)break;th_in-=1,sliderChanged();break;case".":if(th_in==data.length-1)break;th_in+=1,sliderChanged();break;case"s":case"S":e.ctrlKey||Plotly.relayout(figurecontainer,{dragmode:"select"});break;case"z":case"Z":e.ctrlKey&!e.shiftKey?unDo():e.ctrlKey&e.shiftKey?reDo():Plotly.relayout(figurecontainer,{dragmode:"zoom"});break;case"p":case"P":swapData();break;case"d":case"D":deleteInterpolate();break;case"e":case"E":deleteExtrapolate();break;case"m":case"M":autoSmooth();break;case"c":case"C":e.ctrlKey?copyThis():changeSign();break;case"v":case"V":e.ctrlKey&&pasteThis();break;case"ArrowDown":keyBoardDrag(0);break;case"ArrowUp":keyBoardDrag(1);break;case"o":case"O":!app.isPackaged&&ddd&&sSwapper();break;case"x":case"X":removeBadData();case"Tab":e.ctrlKey&&(keepTrackIndex+=1,keepTrackIndex==fullData.length&&(keepTrackIndex=1),selectEditable(keepTrackIndex));break;case"ArrowLeft":case"ArrowRight":e.ctrlKey|e.shiftKey&&moveReflect(e.keyCode-37,e.shiftKey);case"k":case"K":dataSupStart();break;case"l":case"L":dataSupEnd()}}keepTrackIndex=0;const conMenu=Menu.buildFromTemplate([{label:"Change Value",click(){var e=document.createElement("div");e.id="setval",e.innerHTML='Set a value for the selected points <br>\n                <input type="text" id="valinput" onchange="setValue();"><br>\n                <input type="button" value="OK" onclick="setValue();">\n                <input type="button" value="Cancel" onclick="$(\'#setval\').remove();">'.trim(),document.body.appendChild(e)}},{label:"Change Sign",accelerator:"C",click(){document.dispatchEvent(new KeyboardEvent("keydown",{bubbles:!0,key:"C"}))}},{label:"Remove Data",accelerator:"X",click(){document.dispatchEvent(new KeyboardEvent("keydown",{bubbles:!0,key:"X"}))}},{label:"Smooth Data",submenu:[{label:"Cubic Spline",accelerator:"D",click(){document.dispatchEvent(new KeyboardEvent("keydown",{bubbles:!0,key:"D"}))}},{label:"Mooving Average",accelerator:"M",click(){document.dispatchEvent(new KeyboardEvent("keydown",{bubbles:!0,key:"M"}))}},{label:"Regression Fitting",accelerator:"E",click(){document.dispatchEvent(new KeyboardEvent("keydown",{bubbles:!0,key:"E"}))}}]}]);function addNewFileDialog(){if(swapperIsOn)dialog.showMessageBoxSync({type:"warning",title:"Can't add the file!!!",message:"Plot along X before adding a new file.",buttons:["Ok"]});else{var e=dialog.showOpenDialogSync({defaultPath:recentLocation,properties:["openFile"]});void 0!==e&&addNewFile(e[0])}}function addNewFile(e){if(data=parseData(fs.readFileSync(e,"utf8")),void 0!=data)if(fullData[0].length==data.length){fullData[0][0].length!=data[0].length&&selUpdate();var t=path.dirname(e),a=path.basename(e,path.extname(e)),n=path.extname(e),l=path.join(t,a+"_new"+n);data[0].length;fullData.unshift(data),fullDataCols.unshift(JSON.parse(JSON.stringify(col))),fileNames.unshift(e),saveNames.unshift(l),legendNames.unshift(path.basename(fileNames[0])+` ${fullDataCols[0].y+1}:${fullDataCols[0].z+1}`),addTrace(),document.title="Interactive Data Editor - "+replaceWithHome(e),recentFiles=recentFiles.filter(t=>t!=e),recentFiles.push(e),recentMenu()}else dialog.showMessageBoxSync({type:"warning",title:"Can't add the file!!!",message:"Trying to open a file with different grid.\nThis is not supported for 3D data.",buttons:["Ok"]})}function addTrace(){figurecontainer.data.length;let e=JSON.parse(JSON.stringify(iniPointsC));e.name=legendNames[0],e.x=fullData[0][th_in][fullDataCols[0].y],e.y=fullData[0][th_in][fullDataCols[0].z],Plotly.addTraces(figurecontainer,e,0),marker=[{symbol:"circle-dot",color:"#b00",size:6,opacity:1}],line=[{width:2,color:"#1e77b4",dash:0,shape:"linear"}];for(let e=1;e<figurecontainer.data.length;e++)marker.push({symbol:"circle-dot",color:colorList[e%9],size:6,opacity:1}),line.push({width:2,color:colorList[e%9],dash:0,shape:"linear"});col=fullDataCols[0],Plotly.restyle(figurecontainer,{line:line,marker:marker}),makeRows(),makeEditable(),firstSave=!0,undoStack=[],redoStack=[]}function selectEditable(e){if(swapperIsOn)[col.s,col.z]=[col.z,col.s],sCol.selectedIndex=col.s,zCol.selectedIndex=col.z,Plotly.restyle(figurecontainer,{x:[data[th_in][col.y],data[th_in][col.y]],y:[data[th_in][col.z],data[th_in][col.s]]});else{if(e>=fullData.length)return;[fullData[0],fullData[e]]=[fullData[e],fullData[0]],[fullDataCols[0],fullDataCols[e]]=[fullDataCols[e],fullDataCols[0]],[fileNames[0],fileNames[e]]=[fileNames[e],fileNames[0]],[saveNames[0],saveNames[e]]=[saveNames[e],saveNames[0]],[legendNames[0],legendNames[e]]=[legendNames[e],legendNames[0]],data=fullData[0],col=fullDataCols[0],updatePlot(),makeRows(),fullData[0][0].length!=fullData[e].length&&selUpdate()}firstSave=!0,makeEditable(),undoStack=[],redoStack=[],updateOnServer()}function makeEditable(){ddd?(xCol.selectedIndex=col.x,yCol.selectedIndex=col.y,zCol.selectedIndex=col.z,sCol.selectedIndex=col.s):(xCol.selectedIndex=col.y,yCol.selectedIndex=col.z,sCol.selectedIndex=col.s),pointscontainer=figurecontainer.querySelector(".scatterlayer .trace:first-of-type .points"),points=pointscontainer.getElementsByTagName("path"),data=fullData[0],dpsy=data[th_in][col.z],dpsx=data[th_in][col.y],Plotly.restyle(figurecontainer,{x:[dpsx],y:[dpsy]},0);for(var e=0;e<dpsx.length;e++)points[e].handle={x:dpsx[e],y:dpsy[e]};startDragBehavior(),document.title="Interactive Data Editor - "+replaceWithHome(fileNames[0])}window.onkeydown=hotKeys,window.onkeyup=hotDKeys,figurecontainer.oncontextmenu=(()=>{index.length&&conMenu.popup()}),figurecontainer.onclick=(e=>{"rect"==e.target.tagName&&(Plotly.restyle(figurecontainer,{selectedpoints:[null]}),index=[],del_dat=[])});var swapperIsOn=!1;function openSwapper(){swapperIsOn=!0,$("#sCol").show(),col.s=sCol.selectedIndex;let e=figurecontainer.data.length;if(e>2){let t=[];for(let a=2;a<e;a++)t.push(a);Plotly.deleteTraces(figurecontainer,t)}else if(1==e){let e=JSON.parse(JSON.stringify(iniPointsD));e.line.color=e.marker.color=colorList[1],Plotly.addTraces(figurecontainer,e)}let t=path.basename(fileNames[0]);Plotly.restyle(figurecontainer,{x:[data[th_in][col.y],data[th_in][col.y]],y:[data[th_in][col.z],data[th_in][col.s]],name:[t+` ${col.y+1}:${col.z+1}`,t+` ${col.y+1}:${col.s+1}`]}),Plotly.relayout(figurecontainer,{selectdirection:"h"}),menu.getMenuItemById("af").enabled=!1,menu.getMenuItemById("arf").enabled=!1,$("#files").addClass("disabled"),updateJSON()}function exitSwapper(){swapperIsOn=!1,Plotly.deleteTraces(figurecontainer,[0,1]);let e=[JSON.parse(JSON.stringify(iniPointsC))];for(let t=1;t<fullData.length;t++){let a=JSON.parse(JSON.stringify(iniPointsC));a.line.color=a.marker.color=colorList[t%9],e.push(a)}Plotly.addTraces(figurecontainer,e),data=fullData[0],Plotly.relayout(figurecontainer,{selectdirection:"any"}),$("#sCol, #sColInp").hide(),updatePlot(all=!0),makeEditable(),updateJSON(),menu.getMenuItemById("af").enabled=!0,menu.getMenuItemById("arf").enabled=!0,$("#files").removeClass("disabled")}function saveAs(){var e=dialog.showSaveDialogSync({title:"Save As:",defaultPath:saveNames[0]});void 0!==e&&(saveNames[0]=e,saveData(),firstSave=!1)}function saveData(){e=data,swapped&&(e=expRotate(e,col.y,col.x));var e=e.map(e=>transpose(e)),t="";try{for(let a of e){for(let e of a)void 0!==e&&(t+=e.map(e=>parseFloat(e).toFixed(8)).join("\t")+"\n");t+="\n"}fs.writeFileSync(saveNames[0],t),showStatus("Data Saved in file "+replaceWithHome(saveNames[0])),saved=!0}catch(e){return showStatus("Something went wrong! Couldn't save the data..."),!1}}function isswap(){if(!data.length)return;for(let e=0;e<fullData.length;e++)[fullDataCols[e].x,fullDataCols[e].y]=[fullDataCols[e].y,fullDataCols[e].x],fullData[e]=expRotate(fullData[e],fullDataCols[e].x,fullDataCols[e].y);if(!fullData.every(e=>e.length===fullData[0].length)){for(let e=0;e<fullData.length;e++)[fullDataCols[e].x,fullDataCols[e].y]=[fullDataCols[e].y,fullDataCols[e].x],fullData[e]=expRotate(fullData[e],fullDataCols[e].x,fullDataCols[e].y);return dialog.showMessageBoxSync({type:"warning",title:"Can't Plot along Y!!!",message:"File(s) have different grid points along the Y axis\nFree version doesn't allow plotting such data",buttons:["Ok"]}),!1}swapped=!swapped;var[e,t]=["Y","X"];swapped&&([e,t]=[t,e]),xName=t,[xCol,yCol]=[yCol,xCol],data=fullData[0],col=fullDataCols[0],updateData(),th_in=0,$slider.slider("value",0),$ch.text(xName+"="+data[th_in][col.x][0]),$("#drag").html((a,n)=>n.replace(e,t))}function selectEvent(e){if(void 0!=e){index=[],del_dat=[],$(".custom-cm").hide();for(let t of e.points)dpsy[t.pointIndex]==t.y&&index.push(t.pointIndex);index=[...new Set(index)]}}function spreadsheet(){editorWindow=new BrowserWindow({minWidth:1200,show:!1,webPreferences:{nodeIntegration:!0}}),editorWindow.maximize(),editorWindow.loadURL(url.format({pathname:path.join(__dirname,"spreadsheet.html"),protocol:"file:",slashes:!0})),editorWindow.setMenuBarVisibility(!1),editorWindow.show(),app.isPackaged||editorWindow.webContents.openDevTools(),editorWindow.webContents.once("dom-ready",function(){editorWindow.webContents.send("slider",[xName,col.x,data])})}function openViewer(e){serve=1;var t="3D_Viewer_Lines.html";e&&(t="3D_Viewer_Surface.html"),viewerWindow=new BrowserWindow({show:!1,minWidth:1200,webPreferences:{nodeIntegration:!0}}),viewerWindow.maximize(),setTimeout(function(){viewerWindow.loadURL(url.format({pathname:path.join(__dirname,t),protocol:"file:",slashes:!0}))},50),viewerWindow.on("closed",function(){delete viewer[t]}),viewerWindow.show(),viewerWindow.setMenuBarVisibility(!1),viewer[t]=viewerWindow,app.isPackaged||viewerWindow.webContents.openDevTools(),viewerWindow.webContents.once("dom-ready",function(){updateOnServer()})}figurecontainer.on("plotly_selected",selectEvent),figurecontainer.on("plotly_relayout",updateJSON),figurecontainer.on("plotly_legendclick",function(){var e=[];for(let t of figurecontainer.data)e.push(t.name);legendNames=e,updateJSON()});