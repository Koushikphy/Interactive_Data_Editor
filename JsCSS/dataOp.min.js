var copyVar;function copyThis(){copyVar=JSON.stringify(data[th_in])}function pasteThis(){saveOldData();var tmp=JSON.parse(copyVar);for(let i=0;i<tmp.length;i++)i!=col.x&&(data[th_in][i]=tmp[i]);updatePlot(1),updateOnServer(),saved=!1,startDragBehavior()}function swapData(){if(index.length){saveOldData();for(let ind of index)[data[th_in][col.z][ind],data[th_in][col.s][ind]]=[data[th_in][col.s][ind],data[th_in][col.z][ind]];updatePlot(),updateOnServer()}}function repeatMirror(){var last=parseFloat($("#einp").val()),times=parseFloat($("#etime").val()),mirror=$("#repSel")[0].selectedIndex,cols_wo_y=[],tmp=data[0].length;for(let i=0;i<tmp;i++)i!=col.y&&cols_wo_y.push(i);data=data.map(dat=>{var ind=dat[col.y].indexOf(last)+1;ind||alert("Endpoint must exist !!!");var newy=dat[col.y].slice(0,ind),tmp;(tmp=newy.slice()).splice(0,1);for(let time=0;time<times-1;time++)for(let i=0;i<tmp.length;i++)newy.push(tmp[i]+last*(1+time));for(let i of cols_wo_y){var new_dat=dat[i].slice(0,ind),tmp=new_dat.slice();for(let time=0;time<times-1;time++)ptmp=mirror?tmp.reverse().slice():tmp.slice(),ptmp.splice(0,1),new_dat.push(...ptmp);dat[i]=new_dat}return dat[col.y]=newy,dat}),$("#extend").slideUp(),updatePlot();var tmp=mirror?"mirrored":"repeated";showStatus(`Data ${tmp} ${times} times...`),startDragBehavior(),updateOnServer(),saved=!1}function dataFiller(){var start=parseFloat($("#fstart").val()),stop=parseFloat($("#fend").val()),step=parseFloat($("#fstep").val()),cols_wo_y=[],tmp=data[0].length;for(let i=0;i<tmp;i++)i!=col.y&&cols_wo_y.push(i);var fullArr=[];for(let i=start;i<=stop;i+=step)fullArr.push(i);data=data.map(dat=>{if(fullArr.length==dat[0].length)return dat;var xs=dat[col.y].slice(),lInd=dat[col.y].length-1;for(let tc of cols_wo_y){newArr=[];var ys=dat[tc].slice();function spline(x){for(var i=1;xs[i]<x;)i++;var t=(x-xs[i-1])/(xs[i]-xs[i-1]),a=ks[i-1]*(xs[i]-xs[i-1])-(ys[i]-ys[i-1]),b=-ks[i]*(xs[i]-xs[i-1])+(ys[i]-ys[i-1]),q;return(1-t)*ys[i-1]+t*ys[i]+t*(1-t)*(a*(1-t)+b*t)}ks=getNaturalKs(xs,ys);for(let val of fullArr)ind=dat[col.y].indexOf(val),-1!=ind?newArr.push(dat[tc][ind]):val<=dat[col.y][0]?newArr.push(dat[tc][0]):val>=dat[col.y][lInd]?newArr.push(dat[tc][lInd]):newArr.push(spline(val));dat[tc]=newArr}return dat[col.y]=fullArr,dat}),$("#filler").slideUp(),updatePlot(),showStatus("Missing values are filled..."),startDragBehavior(),updateOnServer(),saved=!1}function filterData(){var condition=$("#flSel")[0].selectedIndex,thrsh=parseFloat($("#flc").val()),fillVal=parseFloat($("#flf").val()),colmn=$("#flcl").val().split(",").map(x=>parseFloat(x)-1);0==condition?data=data.map(dat=>{for(let tc of colmn)dat[tc]=dat[tc].map(x=>x<thrsh?fillVal:x);return dat}):1==condition?data=data.map(dat=>{for(let tc of colmn)dat[tc]=dat[tc].map(x=>x>thrsh?fillVal:x);return dat}):2==condition&&(data=data.map(dat=>{for(let tc of colmn)dat[tc]=dat[tc].map(x=>x==thrsh?fillVal:x);return dat})),$("#filter").slideUp(),updatePlot(),showStatus("Data filtered..."),startDragBehavior(),updateOnServer(),saved=!1}function getNaturalKs(xs,ys){for(var ks=new Array(xs.length).fill(0),n=xs.length-1,A=[],i=0;i<n+1;i++)A.push(new Array(n+2).fill(0));for(var i=1;i<n;i++)A[i][i-1]=1/(xs[i]-xs[i-1]),A[i][i]=2*(1/(xs[i]-xs[i-1])+1/(xs[i+1]-xs[i])),A[i][i+1]=1/(xs[i+1]-xs[i]),A[i][n+1]=3*((ys[i]-ys[i-1])/((xs[i]-xs[i-1])*(xs[i]-xs[i-1]))+(ys[i+1]-ys[i])/((xs[i+1]-xs[i])*(xs[i+1]-xs[i])));return A[0][0]=2/(xs[1]-xs[0]),A[0][1]=1/(xs[1]-xs[0]),A[0][n+1]=3*(ys[1]-ys[0])/((xs[1]-xs[0])*(xs[1]-xs[0])),A[n][n-1]=1/(xs[n]-xs[n-1]),A[n][n]=2/(xs[n]-xs[n-1]),A[n][n+1]=3*(ys[n]-ys[n-1])/((xs[n]-xs[n-1])*(xs[n]-xs[n-1])),solve(A,ks)}function solve(A,ks){for(var m=A.length,k=0;k<m;k++){for(var i_max=0,vali=Number.NEGATIVE_INFINITY,i=k;i<m;i++)A[i][k]>vali&&(i_max=i,vali=A[i][k]);var p=A[k];A[k]=A[i_max],A[i_max]=p;for(var i=k+1;i<m;i++)for(var j=k+1;j<m+1;j++)A[i][j]=A[i][j]-A[k][j]*(A[i][k]/A[k][k]),A[i][k]=0}for(var i=m-1;i>=0;i--){var v=A[i][m]/A[i][i];ks[i]=v;for(var j=i-1;j>=0;j--)A[j][m]-=A[j][i]*v,A[j][i]=0}return ks}function deleteInterpolate(){if(index.length){var xs=dpsx.slice(),ys=dpsy.slice();0==index[0]&&index.splice(0,1),index[index.length-1]==dpsx.length-1&&index.splice(-1,1);for(var i=index.length-1;i>=0;i--)xs.splice(index[i],1),ys.splice(index[i],1);ks=getNaturalKs(xs,ys),saveOldData();for(let ind of index)data[th_in][col.z][ind]=spline(data[th_in][col.y][ind]);updatePlot(),updateOnServer(),index=[],Plotly.restyle(figurecontainer,{selectedpoints:[null]}),saved=!1}function spline(x){for(var i=1;xs[i]<x;)i++;var t=(x-xs[i-1])/(xs[i]-xs[i-1]),a=ks[i-1]*(xs[i]-xs[i-1])-(ys[i]-ys[i-1]),b=-ks[i]*(xs[i]-xs[i-1])+(ys[i]-ys[i-1]),q;return(1-t)*ys[i-1]+t*ys[i]+t*(1-t)*(a*(1-t)+b*t)}}function autoSmooth(){if(ma&&(saveOldData(),ma=0),index.length){0==index[0]&&index.splice(0,1),index[index.length-1]==dpsx.length-1&&index.splice(-1,1);for(let i of index)dpsy[i]=(dpsy[i-1]+dpsy[i]+dpsy[i+1])/3;data[th_in][col.z]=dpsy,updatePlot(),saved=!1}}function changeSign(){if(index.length){saveOldData();for(let ind of index)data[th_in][col.z][ind]*=-1;updatePlot(),updateOnServer(),index=[],Plotly.restyle(figurecontainer,{selectedpoints:[null]}),saved=!1}}